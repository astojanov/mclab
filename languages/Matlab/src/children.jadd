aspect Children {
    public ListNode ListNode.add(ExtractNode newChild) {
        if(newChild != null) {
            List<Node> nodes = getNodes();
            nodes.add(newChild);
        }
        return this;
    }
    public ListNode ListNode.add(beaver.Symbol newChild) {
        if(newChild != null) {
            List<Node> nodes = getNodes();
            if(newChild.value instanceof java.util.ArrayList) {
                for(Object child : (java.util.ArrayList) newChild.value) {
                    //don't bother to recurse - should be a flat list
                    nodes.add(new SymbolNode((beaver.Symbol) child));
                }
            } else {
                nodes.add(new SymbolNode(newChild));
            }
        }
        return this;
    }
}