aspect Children {
    /* Convenience method for building up a ListNode by chaining add() calls. */
    public ListNode ListNode.add(beaver.Symbol newChild) {
        List<Node> nodes = getNodes();
        if(newChild instanceof Node) {
            nodes.add((Node) newChild);
        } else if(newChild.value instanceof String) {
            nodes.add(new SymbolNode(newChild));
        } else if(newChild.value instanceof java.util.ArrayList) {
            for(Object child : (java.util.ArrayList) newChild.value) {
                add((beaver.Symbol) child);
            }
        }
        return this;
    }
    /* Special-case for when Beaver builds an array for a * or + element. */
    public ListNode ListNode.add(beaver.Symbol[] newChildren) {
        for(beaver.Symbol newChild : newChildren) {
            add(newChild);
        }
        return this;
    }
}