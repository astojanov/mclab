aspect Children {
    public ListNode ListNode.add(beaver.Symbol newChild) {
        List<Node> nodes = getNodes();
        if(newChild instanceof Node) {
            nodes.add((Node) newChild);
        } else if(newChild.value instanceof String) {
            nodes.add(new SymbolNode(newChild));
        } else if(newChild.value instanceof java.util.ArrayList) {
            for(Object child : (java.util.ArrayList) newChild.value) {
                add((beaver.Symbol) child);
            }
        }
        return this;
    }
    public ListNode ListNode.add(beaver.Symbol[] newChildren) {
        for(beaver.Symbol newChild : newChildren) {
            add(newChild);
        }
        return this;
    }
    
    public void ASTNode.setLocation(int start, int end) {
        this.start = start;
        this.end = end;
    }
    
    public void ASTNode.setLocation(beaver.Symbol sym) {
        setLocation(sym.getStart(), sym.getEnd());
    }
}