aspect StructureString {
	syn String ASTNode.getStructureString() { throw new UnsupportedOperationException(getClass().getName() + ".getStructureString()"); }
	
	eq Annotation.getStructureString() {
		StringBuffer buf = new StringBuffer();
		for(Stmt stmt : getStmts()) {
			buf.append(stmt.getStructureString());
		}
		return buf.toString();
	}
	
	eq SizeStmt.getStructureString() = "#" + getEntity().getStructureString() + " = " + getSize().getStructureString() + ";\n";
	eq TypeStmt.getStructureString() = getEntity().getStructureString() + " : " + getType().getStructureString() + ";\n";
	
	eq Variable.getStructureString() = getName();
	eq Field.getStructureString() = getEntity().getStructureString() + "." + getFieldName();
	eq Cell.getStructureString() {
		StringBuffer buf = new StringBuffer();
		buf.append(getEntity().getStructureString());
		buf.append("{");
		boolean first = true;
		for(Integer index: getIndices()) {
			if(!first) {
				buf.append(", ");
			}
			first = false;
			buf.append(index);
		}
		buf.append("}");
		return buf.toString();
	}
	
	eq Size.getStructureString() {
		StringBuffer buf = new StringBuffer();
		buf.append("[");
		boolean first = true;
		for(Integer dim: getDims()) {
			if(!first) {
				buf.append(", ");
			}
			first = false;
			buf.append(dim);
		}
		buf.append("]");
		return buf.toString();
	}
	
	eq IntersectionType.getStructureString() {
		StringBuffer buf = new StringBuffer();
		boolean first = true;
		for(Type type: getTypes()) {
			if(!first) {
				buf.append(" & ");
			}
			first = false;
			if(type instanceof UnionType) {
				buf.append("(");
				buf.append(type.getStructureString());
				buf.append(")");
			} else {
				buf.append(type.getStructureString());
			}
		}
		return buf.toString();
	}
	
	eq ArrowType.getStructureString() {
		StringBuffer buf = new StringBuffer();
		Type argType = getArgType();
		if(argType instanceof UnionType) {
			buf.append("(");
			buf.append(argType.getStructureString());
			buf.append(")");
		} else {
			buf.append(argType.getStructureString());
		}
		buf.append(" -> ");
		Type resultType = getResultType();
		if(resultType instanceof UnionType) {
			buf.append("(");
			buf.append(resultType.getStructureString());
			buf.append(")");
		} else {
			buf.append(resultType.getStructureString());
		}
		return buf.toString();
	}
	
	eq UnitType.getStructureString() = "()";
	eq ArgTupleType.getStructureString() {
		StringBuffer buf = new StringBuffer();
		boolean first = true;
		buf.append("(");
		for(Type type: getStaticArgTypes()) {
			if(!first) {
				buf.append(", ");
			}
			first = false;
			buf.append(type.getStructureString());
		}
		buf.append(", ");
		buf.append(getVarArgType().getStructureString());
		buf.append(")");
		return buf.toString();
	}
	
	eq VarArgType.getStructureString() {
		return (getType() instanceof UnionType) ? "(" + getType().getStructureString() + ")*" : getType().getStructureString() + "*";
	}
	
	eq TupleType.getStructureString() {
		StringBuffer buf = new StringBuffer();
		buf.append("(");
		boolean first = true;
		for(Type type: getElementTypes()) {
			if(!first) {
				buf.append(", ");
			}
			first = false;
			buf.append(type.getStructureString());
		}
		buf.append(")");
		return buf.toString();
	}
	
	eq UnionType.getStructureString() {
		StringBuffer buf = new StringBuffer();
		boolean first = true;
		for(Type type: getTypes()) {
			if(!first) {
				buf.append(" | ");
			}
			first = false;
			if(type instanceof ArrowType || type instanceof IntersectionType) {
				buf.append("(");
				buf.append(type.getStructureString());
				buf.append(")");
			} else {
				buf.append(type.getStructureString());
			}
		}
		return buf.toString();
	}
	
	eq MatrixType.getStructureString() = "[" + getElementType().getStructureString() + "]";
	eq CellArrayType.getStructureString() = "{" + getDefaultElementType().getStructureString() + "}";
	eq PrimitiveType.getStructureString() = getName();
	eq TypeVarType.getStructureString() = "$" + getName();
	eq HandleType.getStructureString() = "@(" + getArrowType().getStructureString() + ")";
	eq UnknownType.getStructureString() = "?";
	
	eq StructType.getStructureString() {
		StringBuffer buf = new StringBuffer();
		buf.append("{");
		boolean first = true;
		for(FieldEntry entry: getFieldEntrys()) {
			if(!first) {
				buf.append(", ");
			}
			first = false;
			buf.append(entry.getStructureString());
		}
		buf.append("}");
		return buf.toString();
	}
	eq FieldEntry.getStructureString() = getName() + " : " + getType().getStructureString();
}