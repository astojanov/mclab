
aspect ASTtoXML {

	public long Annotation.nodeCounter = 0;
	public long Annotation.getNodeCounter(){
		return nodeCounter;
	}
	public String Annotation.getXML(long count, int indent){
		nodeCounter = count;
		return getXML(indent);
	}
  	public long ASTNode.nodeCounter() {
  		ASTNode node = this;
	    while(node != null && !(node instanceof Annotation))
	    	node = node.getParent();
	    
	    Annotation anno = (Annotation)node;
    	return anno.nodeCounter++;
  	}
  	
  	syn String ASTNode.getXMLindented(int indent) {
        StringBuffer buf = new StringBuffer();
        
        buf.append('\n');
        for(int i=0; i<indent; i++) {
        	buf.append('\t');
        }
        
        return buf.toString();
    }
    
	syn String ASTNode.getXML(int indent) { throw new UnsupportedOperationException(getClass().getName() + ".getXML()"); }
	
	eq Annotation.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"Annotation\">");

        for(Stmt stmt : getStmts()) {
            buf.append(stmt.getXML(indent+1));
        }
        
        buf.append(getXMLindented(indent));
        buf.append("</node>");
		
		return buf.toString();
	}
	
	eq SizeStmt.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"SizeStmt\">");

        buf.append(getEntity().getXML(indent+1));
        buf.append(getSize().getXML(indent+1));
        
        buf.append(getXMLindented(indent));
        buf.append("</node>");
		
		return buf.toString();
	}
	
	eq TypeStmt.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"TypeStmt\">");

        buf.append(getEntity().getXML(indent+1));
        buf.append(getType().getXML(indent+1));
        
        buf.append(getXMLindented(indent));
        buf.append("</node>");
		
		return buf.toString();
	}
	
	eq Variable.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"Variable\">");

        buf.append(getXMLindented(indent+1));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"String\" name=\"Name\" value=\""+getName()+"\"></node>");
        
        buf.append(getXMLindented(indent));
        buf.append("</node>");
		
		return buf.toString();
	}
	
	eq Field.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"Field\">");

		buf.append(getEntity().getXML(indent+1));

        buf.append(getXMLindented(indent+1));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"String\" name=\"FieldName\" value=\""+getFieldName()+"\"></node>");
        
        buf.append(getXMLindented(indent));
        buf.append("</node>");
		
		return buf.toString();
	}
	
	eq Cell.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"Cell\">");

		buf.append(getEntity().getXML(indent+1));
        
		for(Integer index: getIndices()) {	
		    buf.append('\n');
		    buf.append(getXMLindented(indent+1));
			buf.append("<node id=\""+nodeCounter()+"\" class=\"Integer\" name=\"Index\" value=\""+index+"\"></node>");	
		}
		
		buf.append(getXMLindented(indent));
		buf.append("</node>");
        
		return buf.toString();
	}
	
	eq Size.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"Size\">");
        
		for(Integer dim: getDims()) {	
		    buf.append('\n');
		    buf.append(getXMLindented(indent+1));
			buf.append("<node id=\""+nodeCounter()+"\" class=\"Integer\" name=\"Dim\" value=\""+dim+"\"></node>");	
		}
		
		buf.append(getXMLindented(indent));
		buf.append("</node>");
        
		return buf.toString();
	}
	
	eq IntersectionType.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"IntersectionType\">");
		
		for(Type type: getTypes()) {
			buf.append(type.getXML(indent+1));
		}
		
		buf.append(getXMLindented(indent));
		buf.append("</node>");
        
		return buf.toString();
	}
	
	eq ArrowType.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"ArrowType\">");
		
		buf.append(getArgType().getXML(indent+1));
		buf.append(getResultType().getXML(indent+1));
		
		buf.append(getXMLindented(indent));
		buf.append("</node>");
        
		return buf.toString();
	}
	
	eq UnitType.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"UnitType\"></node>");
        
		return buf.toString();
	}
	
	eq ArgTupleType.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"ArgTupleType\">");
		
		for(Type type: getStaticArgTypes()) {
			buf.append(type.getXML(indent+1));
		}
		
		buf.append(getVarArgType().getXML(indent+1));
		
		buf.append(getXMLindented(indent));
		buf.append("</node>");
        
		return buf.toString();
	}
	
	eq VarArgType.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"VarArgType\">");
		
		buf.append(getType().getXML(indent+1));
		
		buf.append(getXMLindented(indent));
		buf.append("</node>");
        
		return buf.toString();
	}
	
	eq TupleType.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"TupleType\">");
		
		for(Type type: getElementTypes()) {
			buf.append(type.getXML(indent+1));
		}
		
		buf.append(getXMLindented(indent));
		buf.append("</node>");
        
		return buf.toString();
	}
	
	eq UnionType.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"UnionType\">");
		
		for(Type type: getTypes()) {
			buf.append(type.getXML(indent+1));
		}
		
		buf.append(getXMLindented(indent));
		buf.append("</node>");
        
		return buf.toString();
	}
	
	eq MatrixType.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"MatrixType\">");
		
		buf.append(getElementType().getXML(indent+1));
		
		buf.append(getXMLindented(indent));
		buf.append("</node>");
        
		return buf.toString();
	}
	
	eq CellArrayType.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"CellArrayType\">");
		
		buf.append(getDefaultElementType().getXML(indent+1));
		
		buf.append(getXMLindented(indent));
		buf.append("</node>");
        
		return buf.toString();
	}
	
	eq PrimitiveType.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"PrimitiveType\">");

        buf.append(getXMLindented(indent+1));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"String\" name=\"Name\" value=\""+getName()+"\"></node>");
        
        buf.append(getXMLindented(indent));
        buf.append("</node>");
		
		return buf.toString();
	}
	
	eq TypeVarType.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"TypeVarType\">");

        buf.append(getXMLindented(indent+1));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"String\" name=\"Name\" value=\""+getName()+"\"></node>");
        
        buf.append(getXMLindented(indent));
        buf.append("</node>");
		
		return buf.toString();
	}
	
	eq HandleType.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"HandleType\">");
		
		buf.append(getArrowType().getXML(indent+1));
		
		buf.append(getXMLindented(indent));
		buf.append("</node>");
        
		return buf.toString();
	}
	
	eq UnknownType.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"UnknownType\"></node>");
        
		return buf.toString();
	}
	
	eq StructType.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"StructType\">");
		
		for(FieldEntry entry: getFieldEntrys()) {
			buf.append(entry.getXML(indent+1));
		}
		
		buf.append(getXMLindented(indent));
		buf.append("</node>");
        
		return buf.toString();
	}
	
	eq FieldEntry.getXML(int indent) {
		StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"TypeVarType\">");

        buf.append(getXMLindented(indent+1));
		buf.append("<node id=\""+nodeCounter()+"\" class=\"String\" name=\"Name\" value=\""+getName()+"\"></node>");
        
        buf.append(getType().getXML(indent+1));
        
        buf.append(getXMLindented(indent));
        buf.append("</node>");
		
		return buf.toString();
	}
}