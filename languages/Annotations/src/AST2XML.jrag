
aspect ASTtoXML {
	
	private long ASTNode.uID = -1;
	public void ASTNode.setuID(long id) {
		uID = id;
	}
	public long ASTNode.getuID() {
		return uID;
	}
	
	public long Annotation.nodeCounter = 0;
	public long Annotation.getNodeCounter(){
		return nodeCounter;
	}
	public String Annotation.getXML(long count, int indent){
		nodeCounter = count;
		return getXML(indent);
	}
  	public long ASTNode.nodeCounter() {
  		ASTNode node = this;
	    while(node != null && !(node instanceof Annotation))
	    	node = node.getParent();
	    
	    Annotation anno = (Annotation)node;
    	return anno.nodeCounter++;
  	}
  	
  	syn String ASTNode.getXMLindented(int indent) {
        StringBuffer buf = new StringBuffer();
        
        buf.append('\n');
        for(int i=0; i<indent; i++) {
        	buf.append('\t');
        }
        
        return buf.toString();
    }
    
	syn String ASTNode.getXML(int indent) { throw new UnsupportedOperationException(getClass().getName() + ".getXML()"); }
	
	eq Annotation.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<Annotation id=\""+id+"\" class=\""+getClass().getName()+"\">");

        for(Stmt stmt : getStmts()) {
            buf.append(stmt.getXML(indent+1));
        }
        
        buf.append(getXMLindented(indent));
        buf.append("</Annotation>");
		
		return buf.toString();
	}
	
	eq SizeStmt.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<SizeStmt id=\""+id+"\" class=\""+getClass().getName()+"\">");

        buf.append(getEntity().getXML(indent+1));
        buf.append(getSize().getXML(indent+1));
        
        buf.append(getXMLindented(indent));
        buf.append("</SizeStmt>");
		
		return buf.toString();
	}
	
	eq TypeStmt.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<TypeStmt id=\""+id+"\" class=\""+getClass().getName()+"\">");

        buf.append(getEntity().getXML(indent+1));
        buf.append(getType().getXML(indent+1));
        
        buf.append(getXMLindented(indent));
        buf.append("</TypeStmt>");
		
		return buf.toString();
	}
	
	eq Variable.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<Variable id=\""+id+"\" class=\""+getClass().getName()+"\" name=\""+getName()+"\" />");

        //buf.append(getXMLindented(indent+1));
		//buf.append("<String id=\""+nodeCounter()+"\" class=\"String\" name=\"Name\" value=\""+getName()+"\" />");
        
        //buf.append(getXMLindented(indent));
        //buf.append("</Variable>");
		
		return buf.toString();
	}
	
	eq Field.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<Field id=\""+id+"\" class=\""+getClass().getName()+"\" name=\""+getFieldName()+"\">");

		buf.append(getEntity().getXML(indent+1));

        //buf.append(getXMLindented(indent+1));
		//buf.append("<String id=\""+nodeCounter()+"\" class=\"String\" name=\"FieldName\" value=\""+getFieldName()+"\" />");
        
        buf.append(getXMLindented(indent));
        buf.append("</Field>");
		
		return buf.toString();
	}
	
	eq Cell.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<Cell id=\""+id+"\" class=\""+getClass().getName()+"\">");

		buf.append(getEntity().getXML(indent+1));
        
		for(Integer index: getIndices()) {	
		    buf.append('\n');
		    buf.append(getXMLindented(indent+1));
			buf.append("<Integer id=\""+nodeCounter()+"\" class=\"Integer\" name=\"Index\" value=\""+index+"\" />");	
		}
		
		buf.append(getXMLindented(indent));
		buf.append("</Cell>");
        
		return buf.toString();
	}
	
	eq Size.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<Size id=\""+id+"\" class=\""+getClass().getName()+"\">");
        
		for(Integer dim: getDims()) {	
		    buf.append('\n');
		    buf.append(getXMLindented(indent+1));
			buf.append("<Integer id=\""+nodeCounter()+"\" class=\"Integer\" name=\"Dim\" value=\""+dim+"\" />");	
		}
		
		buf.append(getXMLindented(indent));
		buf.append("</Size>");
        
		return buf.toString();
	}
	
	eq IntersectionType.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<IntersectionType id=\""+id+"\" class=\""+getClass().getName()+"\">");
		
		for(Type type: getTypes()) {
			buf.append(type.getXML(indent+1));
		}
		
		buf.append(getXMLindented(indent));
		buf.append("</IntersectionType>");
        
		return buf.toString();
	}
	
	eq ArrowType.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<ArrowType id=\""+id+"\" class=\""+getClass().getName()+"\">");
		
		buf.append(getArgType().getXML(indent+1));
		buf.append(getResultType().getXML(indent+1));
		
		buf.append(getXMLindented(indent));
		buf.append("</ArrowType>");
        
		return buf.toString();
	}
	
	eq UnitType.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<UnitType id=\""+id+"\" class=\""+getClass().getName()+"\"></UnitType>");
        
		return buf.toString();
	}
	
	eq ArgTupleType.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<ArgTupleType id=\""+id+"\" class=\""+getClass().getName()+"\">");
		
		for(Type type: getStaticArgTypes()) {
			buf.append(type.getXML(indent+1));
		}
		
		buf.append(getVarArgType().getXML(indent+1));
		
		buf.append(getXMLindented(indent));
		buf.append("</ArgTupleType>");
        
		return buf.toString();
	}
	
	eq VarArgType.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<VarArgType id=\""+id+"\" class=\""+getClass().getName()+"\">");
		
		buf.append(getType().getXML(indent+1));
		
		buf.append(getXMLindented(indent));
		buf.append("</VarArgType>");
        
		return buf.toString();
	}
	
	eq TupleType.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<TupleType id=\""+id+"\" class=\""+getClass().getName()+"\">");
		
		for(Type type: getElementTypes()) {
			buf.append(type.getXML(indent+1));
		}
		
		buf.append(getXMLindented(indent));
		buf.append("</TupleType>");
        
		return buf.toString();
	}
	
	eq UnionType.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<UnionType id=\""+id+"\" class=\""+getClass().getName()+"\">");
		
		for(Type type: getTypes()) {
			buf.append(type.getXML(indent+1));
		}
		
		buf.append(getXMLindented(indent));
		buf.append("</UnionType>");
        
		return buf.toString();
	}
	
	eq MatrixType.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<MatrixType id=\""+id+"\" class=\""+getClass().getName()+"\">");
		
		buf.append(getElementType().getXML(indent+1));
		
		buf.append(getXMLindented(indent));
		buf.append("</MatrixType>");
        
		return buf.toString();
	}
	
	eq CellArrayType.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<CellArrayType id=\""+id+"\" class=\""+getClass().getName()+"\">");
		
		buf.append(getDefaultElementType().getXML(indent+1));
		
		buf.append(getXMLindented(indent));
		buf.append("</CellArrayType>");
        
		return buf.toString();
	}
	
	eq PrimitiveType.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<PrimitiveType id=\""+id+"\" class=\""+getClass().getName()+"\" name=\""+getName()+"\" />");

        //buf.append(getXMLindented(indent+1));
		//buf.append("<String id=\""+nodeCounter()+"\" class=\"String\" name=\"Name\" value=\""+getName()+"\" />");
        
        //buf.append(getXMLindented(indent));
        //buf.append("</PrimitiveType>");
		
		return buf.toString();
	}
	
	eq TypeVarType.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<TypeVarType id=\""+id+"\" class=\""+getClass().getName()+"\" name=\""+getName()+"\" />");

        //buf.append(getXMLindented(indent+1));
		//buf.append("<String id=\""+nodeCounter()+"\" class=\"String\" name=\"Name\" value=\""+getName()+"\" />");
        
        //buf.append(getXMLindented(indent));
        //buf.append("</TypeVarType>");
		
		return buf.toString();
	}
	
	eq HandleType.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<HandleType id=\""+id+"\" class=\""+getClass().getName()+"\">");
		
		buf.append(getArrowType().getXML(indent+1));
		
		buf.append(getXMLindented(indent));
		buf.append("</HandleType>");
        
		return buf.toString();
	}
	
	eq UnknownType.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<UnknownType id=\""+id+"\" class=\""+getClass().getName()+"\" />");
        
		return buf.toString();
	}
	
	eq StructType.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<StructType id=\""+id+"\" class=\""+getClass().getName()+"\">");
		
		for(FieldEntry entry: getFieldEntrys()) {
			buf.append(entry.getXML(indent+1));
		}
		
		buf.append(getXMLindented(indent));
		buf.append("</StructType>");
        
		return buf.toString();
	}
	
	eq FieldEntry.getXML(int indent) {
		long id = nodeCounter();
        setuID(id);
        StringBuffer buf = new StringBuffer();
		
		buf.append(getXMLindented(indent));
		buf.append("<TypeVarType id=\""+id+"\" class=\""+getClass().getName()+"\" name=\""+getName()+"\">");

        //buf.append(getXMLindented(indent+1));
		//buf.append("<String id=\""+nodeCounter()+"\" class=\"String\" name=\"Name\" value=\""+getName()+"\" />");
        
        buf.append(getType().getXML(indent+1));
        
        buf.append(getXMLindented(indent));
        buf.append("</FieldEntry>");
		
		return buf.toString();
	}
}