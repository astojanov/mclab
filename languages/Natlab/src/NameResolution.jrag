import natlab.SymbolTableEntry;

aspect NameResolution{


    syn lazy SymbolTableEntry Program.lookupLValue(String name) = null;
    syn lazy SymbolTableEntry Stmt.lookupLValue(String name) = null;
    syn lazy SymbolTableEntry Expr.lookupLValue(String name) = null;

    //eq EmptyProgram.lookupLValue( String name ) = null;

    eq Script.lookupLValue( String name ) 
    {
        SymbolTableEntry se = null;
        for( int i=0; i < getNumStmt(); i++ ){
            se = getStmt(i).lookupLValue( name );
            if( se != null )
                return se;
        }
        return se;
    }

    eq FunctionList.lookupLValue( String name )
    {
        return null;
    }

    //eq ClassDef.lookupLValue( String name ) = null;
        
    eq AssignStmt.lookupLValue( String name ) = getLHS().lookupLValue( name );


    eq NameExpr.lookupLValue( String name ) 
    {
        if( getName().getID().equals( name ) )
            return new SymbolTableEntry( name );
        return null;
    }
    eq ParameterizedExpr.lookupLValue( String name ) = getTarget().lookupLValue( name );
    eq CellIndexExpr.lookupLValue( String name ) = getTarget().lookupLValue( name );
    eq DotExpr.lookupLValue( String name ) = getTarget().lookupLValue( name );
    eq MatrixExpr.lookupLValue( String name )
    {
        //return new SymbolTableEntry( getPrettyPrinted() );
        for( int i=0; i < getNumRow(); i++ ){
            for( int j=0; j < getRow(i).getNumElement(); j++ ){
                SymbolTableEntry se = getRow(i).getElement(j).lookupLValue( name );
                if( se != null )
                    return se;
            }
        }
        return null;
    }
}