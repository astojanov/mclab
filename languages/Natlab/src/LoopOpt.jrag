// =========================================================================== //
//                                                                             //
// Copyright 2008-2011 Andrew Casey, Jun Li, Jesse Doherty,                    //
//   Maxime Chevalier-Boisvert, Toheed Aslam, Anton Dubrau, Nurudeen Lameed,   //
//   Amina Aslam, Rahul Garg, Soroush Radpour, Olivier Savary Belanger,        //
//   Laurie Hendren, Clark Verbrugge and McGill University.                    //
//                                                                             //
//   Licensed under the Apache License, Version 2.0 (the "License");           //
//   you may not use this file except in compliance with the License.          //
//   You may obtain a copy of the License at                                   //
//                                                                             //
//       http://www.apache.org/licenses/LICENSE-2.0                            //
//                                                                             //
//   Unless required by applicable law or agreed to in writing, software       //
//   distributed under the License is distributed on an "AS IS" BASIS,         //
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  //
//   See the License for the specific language governing permissions and       //
//   limitations under the License.                                            //
//                                                                             //
// =========================================================================== //

aspect LoopOpt {
    
    private annotations.ast.LoopOptStmt ForStmt.getFirstLoopOptAnnotation() {
        if(getNumStmt() == 0) {
            return null;
        }
        Stmt firstStmt = getStmt(0);
        if(firstStmt instanceof ExpandedAnnotation) {
            for(annotations.ast.Stmt stmt : ((ExpandedAnnotation) firstStmt).getanno().getStmts()) {
                if(stmt instanceof annotations.ast.LoopOptStmt) {
                    return (annotations.ast.LoopOptStmt) stmt;
                }
            }
        }
        return null;
    }
    
    syn boolean ForStmt.isEligibleForLoopFusion() = getFirstLoopOptAnnotation() instanceof annotations.ast.LoopFusionOpt;
    syn boolean ForStmt.isEligibleForLoopFission() = getFirstLoopOptAnnotation() instanceof annotations.ast.LoopFissionOpt;
    syn boolean ForStmt.isEligibleForLoopInterchange() = getFirstLoopOptAnnotation() instanceof annotations.ast.LoopInterchangeOpt;
    syn boolean ForStmt.isEligibleForLoopReversal() = getFirstLoopOptAnnotation() instanceof annotations.ast.LoopReversalOpt;
    syn boolean ForStmt.isEligibleForLoopUnrolling() = getFirstLoopOptAnnotation() instanceof annotations.ast.LoopUnrollingOpt;
    
     float ForStmt.Fl1;
     float ForStmt.Fl2;     
     
     public float ForStmt.getFl1() {
        return Fl1;   	
    }
    
    public float ForStmt.getFl2() {
        return Fl2;   	
    }
    
    
}