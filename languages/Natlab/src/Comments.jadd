//Add a list of comments to each node.
//Empty by default.
aspect Comments {
    private java.util.List<beaver.Symbol> ASTNode.comments = new java.util.ArrayList<beaver.Symbol>();
    
    /**
     * sets the comments for the given ast node by copying the the comments
     * from the given list of comments.
     * If the argument is null, sets an empty list as comments.
     */
    public void ASTNode.setComments(java.util.List<beaver.Symbol> comments) {
        if (comments != null){
           this.comments = new java.util.ArrayList<beaver.Symbol>(comments);
        } else {
           this.comments =  new java.util.ArrayList<beaver.Symbol>();
        }
    }
    
    public java.util.List<beaver.Symbol> ASTNode.getComments() {
        return java.util.Collections.unmodifiableList(comments);
    }
    
    public boolean ASTNode.hasComments() {
        return !comments.isEmpty();
    }
    
    /**
     * adds the given comment at the end of the list of comments
     */
    public void ASTNode.addComment(beaver.Symbol comment){
        comments.add(comment);
    }
}