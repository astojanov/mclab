Program ::= Function:Function*;

Function ::= [FunctionName:FunctionName] Param:Variable* StmtBlock:StmtBlock;

FunctionName ::= <Name:String>;

Variable ::= <Name:String>;

abstract Stmt;

StmtBlock:Stmt ::= Stmt:Stmt*;

StmtExpr:Stmt ::= Expr:Expr;

StmtNull:Stmt ::= ;

StmtReturn:Stmt ::= [Expr:Expr];

StmtIfThenElse:Stmt ::= Cond:Expr Then:Stmt [Else:Stmt];

abstract Expr;

ExprNum:Expr ::= <Value:double>;

ExprString:Expr ::= <Value:String>;

ExprBoolean:Expr ::= <Value:Boolean>;

ExprCall:Expr ::= FunctionName:FunctionName Argument:Expr*;

ExprLambda:Expr ::= Function:Function;

ExprAssign:Expr ::= LValue:Variable Expr:Expr;

ExprVar:Expr ::= Variable:Variable;
