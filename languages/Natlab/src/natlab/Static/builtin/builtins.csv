# specifies builtins, in a tree structure, with annotated information
# this list is used to generate the java code for the builtins (via 'genBuiltin.py') 
# Syntax:
# <name>; <parent>; <tag1>; <tag2>; ... ; <tagn>
# - if no parent is specified then the most recent name is assumed
# - the most recent comment gets preserved and annotated to the java code
# - all parent classes will be renamed as Abstract<Name>, except the root
# - all classes will have their first letter capitalized
# - the overall parent class 'Builtin' - is treated specially, so doesn't need to
#   specifically listed
# - Tags are optional -- they specify extra properties that the builtins have.
#   Both internal nodes (abstract builtins) and leafs (actual
#   builtins) can have tags. a tag will force some extra code to be
#   inserted into the buitin, and/or force it to implement some extra interface.
#
# tags:
# - args, args(), args(n), args(m,n)
#     Defines the allowable number of parameters, via the interface
#     ArityDefined. args, args() will add the interface for abstract
#     builtins, args(n) sets a fixed arity, args(m,n) a variadic
#     range, 'inf' is infinity (i.e. args(2,inf) means 2 or more args)
#


#
# TODO
# - class is not impure
# - mfilename is matlab system
# - better categorize matlab system stuff
# - better categorize operator vs matrix operator, and the binary vs
#     unary, and elementwise vs matrix
#     also group by type (numerical, float, etc.)
# - an operator is something that takes the same number of args,
#     always ?
# - group explicit indexing
# - should I name <type>Result<..>?



#pure functions have no side effects and always return the same value
pureFunction; builtin

# *** constants **************************************************
constant; pureFunction;

numericalConstant; constant; args(0)
i
j
pi



#matlab operators
operator; pureFunction

# special operators ... not sure what to do with them
colon
horzcat
vertcat
cat
nargin
nargout
mfilename
end


# other operators
isequalwithequalnans
# same as isequal; but nan == nan
isequal
# recursive equal all
subsasgn
# explicit indexingops
subsref

histc


mapOperator; operator;
structfun
arrayfun
cellfun


# *** binary ops *************************************************
binaryOperator; operator


#relational ops
relationalOperator; binaryOperator
eq
ne
lt
le
ge
gt


#logical operators - note there's no short circuit ops
binaryLogicalOperator; binaryOperator
and
or
xor




#numerical binary oprators
numericalBinaryOperator; binaryOperator
#matrix operators
matrixBinaryOperator; numericalBinaryOperator
plus
minus
mtimes
mpower
mldivide
mrdivide
#array operators
elementwiseBinaryOperator; numericalBinaryOperator
times
ldivide
rdivide
power
pow2
#scalbn; ldexp
mod
rem
# only works with single; double
hypot

# *** unary operators ***************************************************
unaryOperator; operator

numericalUnaryOperator; unaryOperator
elementwiseUnaryOperator; numericalUnaryOperator
uplus
uminus
conj
real
imag
abs

matrixUnaryOperator; numericalUnaryOperator
transpose
ctranspose
# analytical matrix operators
expm
sqrtm
logm



logicalUnaryOperator; unaryOperator
not


# *** matrix operations ************************************************
matrixOperation; pureFunction
elementwiseMatrixOperation; matrixOperation
sqrt
realsqrt
erf
erfinv
erfc
erfcinv
gamma
gammainc
betainc
gammaln
exp
log
log2
log10



forwardTrigonometricFunction;elementwiseMatrixOperation 
trigonometricFunction; forwardTrigonometricFunction
sin
cos
tan
cot
sec
csc

decimalTrigonometricFunction; forwardTrigonometricFunction
sind
cosd
tand
cotd
secd
cscd

hyperbolicTrigonometricFunction; elementwiseMatrixOperation
sinh
cosh
tanh
coth
sech
csch

inverseTrigonmetricFunction; elementwiseMatrixOperation
standardInverseTrigonmetricFunction; inverseTrigonmetricFunction
asin
acos
atan
atan2
acot
asec
acsc

decimalInverseTrigonmetricFunction; inverseTrigonmetricFunction
asind
acosd
atand
acotd
asecd
acscd

hyperbolicInverseTrigonmetricFunction; inverseTrigonmetricFunction
asinh
acosh
atanh
acoth
asech
acsch


RoundingOperation; elementwiseMatrixOperation
fix
round
floor
ceil


# matrix computation algorithms
matrixComputation; matrixOperation
inv
eig
norm
rank
det
dot
cross
# factorization
linsolve
# linear solve
# n dimensional discrete fourier transform
rcond
# condition number estimate
tril
triu
eps

fourierFunction; matrixComputation
ifftn
fftn
fft


factorization; matrixComputation
schur
#factorization
ordschur
lu
chol
qr
svd



# bit operators
bitOperation; pureFunction
bitand
bitor
bitxor
bitcmp
bitget
bitshift
bitset


# *** string operations **************************************************
stringOperation; pureFunction
strncmpi
strcmp
strcmpi
strtrim
strfind
findstr
strrep
upper
lower
deblank


# regulat expressions
regexpOperation; stringOperation
regexptranslate
regexp
regexpi
tegexprep


# *** Constructors *****************************************************
constructor; pureFunction
primitiveConstructor; constructor
double
single
char
logical
int8
int16
int32
int64
uint8
uint16
uint32
uint64


compoundConstructor; constructor
cell
struct


conversionFunction; constructor
cell2struct
struct2cell
typecast
cast


# *** struct operations ************************************************
structOperation; pureFunction
isfield


# *** class operations **************************************************
classOperation; pureFunction
class

classQueryOperation; classOperation
methodnames
fieldnames

logicalClassQueryOperation; classQueryOperation
isempty
isobject
isfloat
isinteger
islogical
isstruct
ischar
iscell
isa


# *** Array operations **************************************************
arrayOperation; pureFunction
sort
unique
find

arrayConstructor; arrayOperation
diag
# changing arrays
reshape
permute
squeeze
complex

dimensionCollapsingOperation; arrayOperation
prod
sum
mean
min
max


ShapeArrayConstructor; arrayConstructor
# construct arrays via their dimensions; and possibly a type
NumericalShapeAndTypeArrayConstructor; ShapeArrayConstructor
ones
zeros
# eye takes at most 2 dims
eye
FloatShapeAndTypeArrayConstructor; NumericalShapeAndTypeArrayConstructor
inf
nan
LogicalShapeArrayConstructor; ShapeArrayConstructor
true
false



arrayQuery; arrayOperation
size
nonzeros
cumprod
cumsum
sign


scalarResultArrayQuery; arrayQuery
numericalScalarResultArrayQuery; scalarResultArrayQuery
length
ndims
numel
nnz

logicalScalarResultArrayQuery; scalarResultArrayQuery
any
all
isemtpy
isnan
isinf
isfinite
isvector
isscalar
isreal
isnumeric




# *** opposite of pure functions *****************************************
impureFunction; builtin

# dunnno what to do with these
superiorto
#set superior to relationship in oldclass constructor
exit
quit
# only really need one of quit/exit
builtin
# calls builtin - strict

timeFunction; impureFunction
clock
tic
toc
cputime


matlabSystemFunction; impureFunction
assert
nargoutchk
nargchk
str2func
pause


dynamicMatlabFunction; matlabSystemFunction
eval
evalin
feval
assignin
inputname

matlabEnvironmentFunction; matlabSystemFunction
import
cd
exist
matlabroot
whos
which
version
clear


reportFunction; impureFunction
# errors should be seprated from warnings and displaying stuff?
disp
display
clc
error
warning
echo
# should this be here? - this could be a strict lib function?
diary
# something logging related
lastwarn
lasterror
format


randomFunction; impureFunction
rand
randi
randn


systemFunction; impureFunction
# should there be a separated operating system category?
computer
beep
dir

operatingSystemCallFunction; systemFunction
unix
dos
system


ioFunction; systemFunction
load
save
input
textscan


posixIoFunction; ioFunction
sprintf
sscanf
fprintf
ftell
ferror
fopen
fread
frewind
fscanf
fseek
fwrite
fgetl
fgets
fclose


# *** library funcitons that are not builtins!! TODO **********************
#notABuiltin, builtin
#conv
#toeplitz
#dyaddown
#flipud
#linspace
#imwrite


