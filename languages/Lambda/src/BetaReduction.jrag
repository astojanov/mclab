aspect BetaReduction {
    syn Node Node.reduce() = this;
    eq App.reduce() {
        Node rator = getRator();
        Node rand = getRand();
        while(true) {
            Node newRator = rator.reduce();
            if(rator.structureEquals(newRator)) {
                break;
            }
            rator = newRator;
        }
        while(true) {
            Node newRand = rand.reduce();
            if(rand.structureEquals(newRand)) {
                break;
            }
            rand = newRand;
        }
        if(!(rator instanceof Abs)) {
            return new App(rator, rand);
        }
        Abs absRator = (Abs) rator;
        Node applied = absRator.getBody().subst(absRator.getVar(), rand);
        return applied.reduce();
    }

    syn Node Root.reduce() = getNode().reduce();
}